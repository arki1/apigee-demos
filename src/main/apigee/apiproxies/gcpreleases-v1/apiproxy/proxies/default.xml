<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>CORS-AddCORS</Name>
      </Step>
    </Request>
    <Response/>
  </PreFlow>
  <Flows>
    <Flow name="getReleases">
      <Condition>(request.verb = "GET") AND (proxy.pathsuffix MatchesPath "/releases")</Condition>
      <Description>GET /releases</Description>
      <Request>
        <Step>
          <Name>AM-CreateQuery</Name>
        </Step>
      </Request>
    </Flow>
    <Flow name="doEcho">
      <Condition>
        (request.verb = "GET" OR request.verb = "POST" OR request.verb = "OPTIONS")
        AND proxy.pathsuffix MatchesPath "/echo"
      </Condition>
      <Description>Echoes the request using a mock endpoint</Description>
    </Flow>
    <Flow name="getOASDiscovery">
      <Condition>(request.verb = "GET") AND (proxy.pathsuffix MatchesPath "/$discovery/oas")</Condition>
      <Response>
        <Step>
          <Name>AM-DiscoveryOAS</Name>
        </Step>
      </Response>
    </Flow>
    <Flow name="do404">
      <Request>
        <Step>
          <Name>RF-NotFound</Name>
          <Description>Raises 404 if no valid request was specified</Description>
        </Step>
      </Request>
    </Flow>
  </Flows>
  <PostFlow name="PostFlow">
    <Request/>
    <Response>
      <Step>
        <Condition>request.header.accept.values.string == "application/xml"</Condition>
        <Name>J2X-ResponseToXML</Name>
      </Step>
    </Response>
  </PostFlow>
  <HTTPProxyConnection>
    <BasePath>/gcpreleases/v1</BasePath>
  </HTTPProxyConnection>
  <RouteRule name="query">
    <Condition>proxy.pathsuffix MatchesPath "/releases"</Condition>
    <TargetEndpoint>bigquery</TargetEndpoint>
  </RouteRule>
  <RouteRule name="echo">
    <Condition>proxy.pathsuffix MatchesPath "/echo"</Condition>
    <TargetEndpoint>echo</TargetEndpoint>
  </RouteRule>
  <RouteRule name="getOASDiscovery">
    <Condition>proxy.pathsuffix MatchesPath "/$discovery/oas"</Condition>
  </RouteRule>
  <RouteRule name="not-found"></RouteRule>
</ProxyEndpoint>
