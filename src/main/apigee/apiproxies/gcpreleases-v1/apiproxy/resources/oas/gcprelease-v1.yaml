openapi: "3.0.0"
info:
  title: GCP Release Notes
  description: |-
    This is a sample demo API to interact with BigQuery as backend and format a response
    message.
  contact:
    email: ronoaldo@arki1.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.2.0"
servers:
  - url: https://apigee-34-171-124-235.sslip.io/eval/gcpreleases/v1
    description: Evaluation/QA Server
  - url: https://apigee-34-171-124-235.sslip.io/prod/gcpreleases/v1
    description: Production Server
  - url: http://localhost:9999/gcpreleases/v1
    description: Apigee Emulator
paths:
  /releases:
    get:
      summary: List 10 most recent release notes.
      operationId: getReleases
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseInfo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseInfo'
                xml:
                  wrapped: true
                  name: 'response'
  /echo:
    get:
      summary: Returns information about the data sent in the request using the Mock API
      operationId: getEcho
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/EchoInfo'
    post:
      summary: Returns information about the data sent in the request using the Mock API
      operationId: postEcho
      requestBody:
        content:
          application/json:
            schema:
              title: "Request body as JSON, of any format"
          application/octet-stream:
            schema:
              title: "Request from file"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/EchoInfo'

components:
  schemas:
    ReleaseInfo:
      type: object
      properties:
        description:
          type: string
        noteType:
          type: string
        productName:
          type: string
        publishedAt:
          type: string
          format: date-time
      xml:
        name: item
    EchoInfo:
      type: object
      properties:
        args:
          type: object
        body:
          type: string
        headers:
          type: object
        method:
          type: string
        url:
          type: string
      xml:
        name: response